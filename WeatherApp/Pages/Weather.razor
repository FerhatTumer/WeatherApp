@page "/weather"
@using WeatherApp.Application.DTOs
@inject WeatherApp.Application.Services.Interfaces.IWeatherService WeatherService

<h3>Weather Forecast</h3>

<div>
    <label for="cityInput">Enter city names (comma-separated):</label>
    <input id="cityInput" @bind="CityNames" placeholder="City1, City2, ..." />
    <button @onclick="GetWeather">Get Weather</button>
</div>

@if (WeatherDataList != null && WeatherDataList.Any())
{
    <div>
        <h4>Weather Data:</h4>
        @foreach (var weather in WeatherDataList)
        {
            <div>
                <h5>@weather.City:</h5>
                <p>Temperature: @weather.Temperature °C</p>
                <p>Condition: @weather.Condition</p>
            </div>
        }
    </div>
}

@if (ErrorMessage != null)
{
    <p style="color: red">@ErrorMessage</p>
}

@code {
    private string CityNames = string.Empty;
    private List<WeatherInfo> WeatherDataList = new();
    private string? ErrorMessage;

    private async Task GetWeather()
    {
        try
        {
            var cities = CityNames.Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
            WeatherDataList = await WeatherService.GetWeatherForCitiesAsync(cities);
            ErrorMessage = WeatherDataList.Any() ? null : "No weather data available for the cities.";
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error fetching weather data: {ex.Message}";
        }
    }
}
